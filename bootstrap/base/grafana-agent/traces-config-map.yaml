kind: ConfigMap
metadata:
  name: grafana-agent-traces
  namespace: grafana-agent
apiVersion: v1
data:
  agent.yaml: |
    server:
      log_level: info
    integrations:
      prometheus_remote_write:
      - url: https://prometheus-prod-13-prod-us-east-0.grafana.net/api/prom/push
        basic_auth:
          username: ${GRAFANA_CLOUD_METRICSUSER}
          password: ${GRAFANA_CLOUD_TOKEN}
      agent:
        enabled: true
        relabel_configs:
          - action: replace
            replacement: k3d-dev-cluster-traces
            source_labels:
              - agent_hostname
            target_label: instance
    metrics:
      global:
        scrape_interval: 60s
        external_labels:
          cluster: dev-cluster
        remote_write:
          - url: https://prometheus-prod-13-prod-us-east-0.grafana.net/api/prom
            basic_auth:
              username: ${GRAFANA_CLOUD_METRICSUSER}
              password: ${GRAFANA_CLOUD_TOKEN}
            send_exemplars: true
      configs:
        - name: default
          scrape_configs:
            - job_name: tempo_service_graph_metrics
              static_configs:
                - targets: ['127.0.0.1:12345']
    logs:
      configs:
      - name: integrations
        clients:
        - url: https://logs-prod-006.grafana.net/loki/api/v1/push
          basic_auth:
            username: ${GRAFANA_CLOUD_LOGSUSER}
            password: ${GRAFANA_CLOUD_TOKEN}
          external_labels:
            cluster: dev-cluster
        positions:
          filename: /tmp/positions.yaml
        target_config:
          sync_period: 10s
        scrape_configs:
        - job_name: integrations/agent
          journal:
            max_age: 24h
            labels:
              instance: k3d-dev-cluster-traces
              job: integrations/agent
          pipeline_stages:
            - match:
                selector: '{unit!="grafana-agent.service"}'
                action: drop
                drop_counter_reason: only_keep_grafana_agent_logs
            - regex:
                expression: "(level=(?P<log_level>[\\s]*debug|warn|info|error))"
            - labels:
                level: log_level
          relabel_configs:
            - source_labels: ['__journal__systemd_unit']
              target_label: 'unit'
    traces:
      configs:
        - batch:
              send_batch_size: 1000
              timeout: 5s
          name: default
          spanmetrics:
            dimensions:
              - name: http.method
              - name: http.target
              - name: http.status_code
              - name: service.version
            handler_endpoint: 0.0.0.0:12345
          service_graphs:
            enabled: true
          automatic_logging:
            backend: stdout
            roots: true
            spans: false
            span_attributes:
              - http.method
              - http.target
              - http.status_code
            overrides:
              trace_id_key: "traceId"
          receivers:
              jaeger:
                  protocols:
                      grpc: null
                      thrift_binary: null
                      thrift_compact: null
                      thrift_http: null
                  remote_sampling:
                      strategy_file: /etc/agent/strategies.json
                      tls:
                          insecure: true
              opencensus: null
              otlp:
                  protocols:
                      grpc: null
                      http: null
              zipkin: null
          remote_write:
            - basic_auth:
                  password: ${GRAFANA_CLOUD_TOKEN}
                  username: ${GRAFANA_CLOUD_TRACESUSER}
              endpoint: tempo-prod-04-prod-us-east-0.grafana.net:443
              retry_on_failure:
                  enabled: true
              sending_queue:
                enabled: true
                num_consumers: 10
                queue_size: 50000
          scrape_configs:
            - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              job_name: kubernetes-pods
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - action: replace
                  source_labels:
                    - __meta_kubernetes_namespace
                  target_label: namespace
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_name
                  target_label: pod
                - action: replace
                  source_labels:
                    - __meta_kubernetes_pod_container_name
                  target_label: container
              tls_config:
                  ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                  insecure_skip_verify: false
  strategies.json: '{"default_strategy": {"param": 0.001, "type": "probabilistic"}}'
