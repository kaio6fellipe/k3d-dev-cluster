---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  # TODO(ver) Restrict this to the Linkerd namespace. See
  # https://github.com/linkerd/linkerd2/issues/9367
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
  - kind: ServiceAccount
    name: linkerd-identity
    namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["pods", "endpoints", "services", "nodes"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["discovery.k8s.io"]
    resources: ["endpointslices"]
    verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQVBiclJ6ZVBObXAySk56OU9vTzluS0V3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13TnpFME1UUTFPREEwV2hjTk1qUXdOekV6TVRRMU9EQTBXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQVBJZXdWSjUwNSs0bnFBZWVjbzh6dWNMRDdoZktnR3MwSVlvQitrWDNSUExYLzUxUVB5VwpDWDl0ekZMNGdQOXJSallGQXFETjUvT0liRWJSSGhlVEg0QlRGdzJrdmVxSm5DWExqaE14dlAwQ29ndldjcEg5CkhZTkcxWlpVTC92WHg0b2xhR2t3aDJlVTdwNEZ1NVBXUGJGT0dyZGJ0Z2cxSXFmbm9TRmlHdFhWajhvSW53eHQKcXFxUjA2MnhhZmlMMVppQ1BOT1BoY29YbWwrMVUyUDVBYm1MM1dCWGZudHI0UGgrWlVKQ3Z6RmJJSVl0TUpudgpBMGcyK243TW5HOWtIOTh4SXdIanBseVdKS0lzUkhCL2dxTWlvWTBUTjZtaE9zWVBpeGY3d3d2Y0drQ1E3WTlqCmQ5QlNqWFJ2aXZVWDBMVjBVTHdOLzhVZDhhNEZGZjNBclVzQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDMTZGQVh6STR5UlFhbkxBOGN4b25QSGFEbHBzdlhsa1dOZXhtQTNEbG0KajFybzRhdDVWMUdxTFk4VWNqZThCVTRPWGNjSjVXWWp0MVkyTE9hQUlzQktqWndjNWxXQzdEdTJqSzJCT01ScQo4emhSWE1QclQyRWk1RXRhS3hmS3E1OVVZM3czVGN5c1lFb2gzWmFHWS9xQ2QzRmJ0L0JxdVczbFlKcUJhTTh6CnBiK1hFbzdNMUZ5Y0FOelJtUXhhRzEzOHRUcm1DM3BOdCtraGZya1RwZ1YwMlVhVXY3cUtyWHVuRXB6SWMxWXYKMHJ3cXBBOVIwRkdPL2FWQ3FEN3liQkNWdjUvcUEyRjRrdUNHTlBSeHhUZ2xmbkU1UnlSOXNzNDg0eExCczN0VwpTelVZeWhha0VRSHg1U29rS2Q1VWNyaWMyOWdINGlzd0oyS0ljaXVPMGRDdAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOGg3QlVublRuN2llb0I1NXlqek81d3NQdUY4cUFhelFoaWdINlJmZEU4dGYvblZBCi9KWUpmMjNNVXZpQS8ydEdOZ1VDb00zbjg0aHNSdEVlRjVNZmdGTVhEYVM5Nm9tY0pjdU9Fekc4L1FLaUM5WnkKa2YwZGcwYlZsbFF2KzlmSGlpVm9hVENIWjVUdW5nVzdrOVk5c1U0YXQxdTJDRFVpcCtlaElXSWExZFdQeWdpZgpERzJxcXBIVHJiRnArSXZWbUlJODA0K0Z5aGVhWDdWVFkva0J1WXZkWUZkK2UydmcrSDVsUWtLL01Wc2doaTB3Cm1lOERTRGI2ZnN5Y2IyUWYzekVqQWVPbVhKWWtvaXhFY0grQ295S2hqUk0zcWFFNnhnK0xGL3ZEQzl3YVFKRHQKajJOMzBGS05kRytLOVJmUXRYUlF2QTMveFIzeHJnVVYvY0N0U3dJREFRQUJBb0lCQUNVR2V2M0h6NHJ2U3FLbAp4bTRjMm04T2kvcmY0cWFhN05CM01xNThqYnhITDRqVUdYb0czN0R5ODNvRXNvVmN2RUhxaGpwZEFvbUZaVGwzCkpTanB3TGw0KzErRXY5NHI2UXNHazlWdmw3MEJPQktqV3FYa2xTek1Ha0dBNGsyYTg5SzJZYjhrUXJDZVg5Y2UKZlU3Z1JsTGs1TVVCYTFiWitWQy81UzRidUlyV2I1Mk9yYXZmMEdPeUhQOXhJcmFySC9BQ3VjWXJoUFNJSTlYQQprdC9PeVN3blM4NlNqejFuSkkxSmhFOWtXc1lNUDZhOHNFNlR5V0tPWHViT29ZM3ZBZVBWdGRPOHNtL0owSXIxCkZFWG5CeUtDQXdZMG9xdGN6TnRnc0o2OVFkeE1FUklPSDN3YVFTNzdKQUNsWHUxWFNweVpmYWpnSnhDdC9UZVgKSUw4OFVIRUNnWUVBOVZ0Q0tUd3V5d21FTjBOSU9RSUcwZkdkVmIxY2c2TnN2RG0ycFBCdHREL3BHR0l0UlJPaQpibkpwK0FySFVRZG1BaUZQdmpoMzVnUFphYWtRMjhnV3J5Z2dRTkVFVE8zc0J3eXNIRGxOYWxjOTN2MDRBWVRSCmpHZXNvOU9LNEZCWWlMWUtObXpDVDNjaTlTMnhOQVVkWENBc1EwaGg1blVGQlMvS3RJOTR2TDBDZ1lFQS9KK08KYjlKMG5Ha01YZjk3SzQxODB5UUt0b2ZXRFNJeDRnaW8vZFR0QWhqUUZkRVlwNmRIYmppdUtOYWFZcHVaNzE1RQpHekZqczdZWHZpdXN1VHM4NUhWR2U2d1ZGczA0cERzditCMzU3RkpuVFFENUUwMVdWNnNocWlGTHVzc1k5djk4CmduVkx3ZUxiMWsxWmpmM2VXOEhnMlZWSHFZTU9UTnJrWkRzM3BxY0NnWUVBdkhDUWlkYjlJVmQzd25IY1lGeGMKSEpaeS9rem5adnIzSWtFNU04aXNtUW1VM3ZOWVRYdGMvM0xFVElzS3RnTDJwNkFwL0xDbDlYVHpZQ0ZISDJXMwpkbU5kRWlyMklKZUM5WThZQ0wxQjVmQ0hSbUk0eDRIWTV2c2hMdG5rQ1kvcnoyUHd5QWdUM0xCbG11U3krbjhMCkk1eGFJbnJQSmc2dUFtUElUWkQ3YkFrQ2dZRUEzeUdYVDlHVnlpbEhFU2Q5aFdSOVlva3RKVGdwcW9RUGgxU2EKMzBqWTVzYy8xR1ZSMzVOekZqbmVLcGdTMlJJVEQwZzE0OGJtQjIvSTNPSDZ0OGxJNllsa2JndjZ2SjhiYm9RUQp4SmpGalNUanRUSXN6ZzI3TzhnZC9nVld2SEJ6Wm9jWFZLdUI5SWtLSCtsR05wS0xlb1J1czhnTmVmNFYvWEJCCjF2NHZFM1VDZ1lBcmdhZkRMWHNDdFRyL1FYYkNUQVNmc3JvblpaTFo3TG9ubHJ6M0I1d0pVQVA2OC9GKzRvbjQKbVJZZzRMNGNoU3BRclE4QkJ3S0hnYkRLTVUyMEN5NWV6QXEvSGtPZTB3L2NHSUhuUzBVN3VQUEhiNE4wUTNKYQpBaWhzN0lpeWFuUFpMbkF5SDljT0lsYUZQTzRNUFZ2M1Z2ZE1ZZkJyUko5U244ZUFVNzZtN1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
  - name: linkerd-sp-validator.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-sp-validator
        namespace: linkerd
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQVBiclJ6ZVBObXAySk56OU9vTzluS0V3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13TnpFME1UUTFPREEwV2hjTk1qUXdOekV6TVRRMU9EQTBXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQVBJZXdWSjUwNSs0bnFBZWVjbzh6dWNMRDdoZktnR3MwSVlvQitrWDNSUExYLzUxUVB5VwpDWDl0ekZMNGdQOXJSallGQXFETjUvT0liRWJSSGhlVEg0QlRGdzJrdmVxSm5DWExqaE14dlAwQ29ndldjcEg5CkhZTkcxWlpVTC92WHg0b2xhR2t3aDJlVTdwNEZ1NVBXUGJGT0dyZGJ0Z2cxSXFmbm9TRmlHdFhWajhvSW53eHQKcXFxUjA2MnhhZmlMMVppQ1BOT1BoY29YbWwrMVUyUDVBYm1MM1dCWGZudHI0UGgrWlVKQ3Z6RmJJSVl0TUpudgpBMGcyK243TW5HOWtIOTh4SXdIanBseVdKS0lzUkhCL2dxTWlvWTBUTjZtaE9zWVBpeGY3d3d2Y0drQ1E3WTlqCmQ5QlNqWFJ2aXZVWDBMVjBVTHdOLzhVZDhhNEZGZjNBclVzQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDMTZGQVh6STR5UlFhbkxBOGN4b25QSGFEbHBzdlhsa1dOZXhtQTNEbG0KajFybzRhdDVWMUdxTFk4VWNqZThCVTRPWGNjSjVXWWp0MVkyTE9hQUlzQktqWndjNWxXQzdEdTJqSzJCT01ScQo4emhSWE1QclQyRWk1RXRhS3hmS3E1OVVZM3czVGN5c1lFb2gzWmFHWS9xQ2QzRmJ0L0JxdVczbFlKcUJhTTh6CnBiK1hFbzdNMUZ5Y0FOelJtUXhhRzEzOHRUcm1DM3BOdCtraGZya1RwZ1YwMlVhVXY3cUtyWHVuRXB6SWMxWXYKMHJ3cXBBOVIwRkdPL2FWQ3FEN3liQkNWdjUvcUEyRjRrdUNHTlBSeHhUZ2xmbkU1UnlSOXNzNDg0eExCczN0VwpTelVZeWhha0VRSHg1U29rS2Q1VWNyaWMyOWdINGlzd0oyS0ljaXVPMGRDdAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
    failurePolicy: Ignore
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["linkerd.io"]
        apiVersions: ["v1alpha1", "v1alpha2"]
        resources: ["serviceprofiles"]
    sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQU9iRHJlV25XVGdZZ2lSWEJpY1pPem93RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJek1EY3hOREUwTlRnd05Gb1hEVEkwTURjeE16RTBOVGd3TkZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdVA0NGhQRE14TFNLYWsxU0E1TlBYcEVhcVdFVjRoS2VFN1ZkNXlsUgo1RTJaRmwrbTU3KzFZSFhTMzl2REo2UVk0enNKRjVLSUZZL3IvOU50OCtRbEVHZHpqb08reXVBZDU3SFBlVUg3CmpsWkRPWE5pVlFRRWxBVmV5UFFsM3hMaklUUHJEaS8ycGJuY2hzSmJINWU0RHl2cnVkSDBHam5iTlQvTzZ2Q2MKcXIrYUpiVXlFaHdTdVJWR0JnU3QzQjFIWkR1dWJmSTllK2JPZVVIT1NyUTdXZEhaM1M2cGNzRWt1bHlFSFNzTgptaXZEZk5nUGVUMi9VR2NNZXovVGZGWGo5NXh5Q0xNR3ozSkY4N0ZWa1pyS2JpMXRzZEl2WUJWekJjT3VVL0FwClVuL1Y4WVdhaVBZOVZLVHZMVlozWVQzdWtNUVl4eXZzQUJMVG1IbVZ2YkdaSFFJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2FNVFBLeFcyQmtvNzE1a05hRHJCYkdvaFUKdXF0Nng4UTJ4cU8rdTFMUjk3SFphaTl0TE1MSk1EZktkYXA2ZjlVcWNiMjVBQlN2bDFuUXl5dElZZUgwSnpTRwpaUWpJUHE3TVNUUjZSaTZtM0V0OTZZNHFibDhQVDRIejBJNTNQb1R1U1FUMEFRQzBSYzgyVUZ5MnkyVGxWbnFjCnZGSzBZSGtRMm93QTc2TnpkSk5QOVRVRnFvUy9RRDRnVU12OGFJb3dUbjlCS2NHSndMVXFSY3BjTW9mZ3UzcDkKQmZ0aElwMVFPNFJTdWY0TGJGcU9mTXpSM2xrK05mOXNTbjRKTVlhaU5SMm1nVHlGVkpBOU1qdlRnWUU4WmVmZwpuSUc3aFgvWnY5Nldiakh5Uk4zWnRDNmlpcy91TFJ6ZnVOTFlBL0dYb0hiNm1WTVg2QnlmSmVuMzA3akQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdVA0NGhQRE14TFNLYWsxU0E1TlBYcEVhcVdFVjRoS2VFN1ZkNXlsUjVFMlpGbCttCjU3KzFZSFhTMzl2REo2UVk0enNKRjVLSUZZL3IvOU50OCtRbEVHZHpqb08reXVBZDU3SFBlVUg3amxaRE9YTmkKVlFRRWxBVmV5UFFsM3hMaklUUHJEaS8ycGJuY2hzSmJINWU0RHl2cnVkSDBHam5iTlQvTzZ2Q2NxcithSmJVeQpFaHdTdVJWR0JnU3QzQjFIWkR1dWJmSTllK2JPZVVIT1NyUTdXZEhaM1M2cGNzRWt1bHlFSFNzTm1pdkRmTmdQCmVUMi9VR2NNZXovVGZGWGo5NXh5Q0xNR3ozSkY4N0ZWa1pyS2JpMXRzZEl2WUJWekJjT3VVL0FwVW4vVjhZV2EKaVBZOVZLVHZMVlozWVQzdWtNUVl4eXZzQUJMVG1IbVZ2YkdaSFFJREFRQUJBb0lCQUduemVDMXp1T09rUDI1WQpzSE5KeUhoeUJPSWpyNlBXWStFSHpDdGIrQUlaQzJmTUNzektlTGd4WTBCQkhvbXlxMnBoWW5pMHZPb1VqdWJyCmtoclFmUVhqS2tUaVljRFNFVzZrNFI0aTAwK1hTbE02S1lSbGs3V3ZTYlV3V0F4bVJkMjdYWkczbUwwY01SaWgKY2cwckdRamZiOWZ5VHF0Q25iRG14Ynk3YUE5R1NsaXNMMFRXWVN1QnNUVnJyNHE5b25CZTlkcWxJSndoUU5JagovZXdEUGNNOHhKSXZ3djMzSm8rNU0yOE84ajhTZFYxNmRCZDRkL3BQK3N2SEx5dXpvZm04NzhFMi8xNmxpME1mCkRQS3JGRTdkeWF1dG1Xb1MwbFZoMVN5QVlHdk55eFFCOEI4bW1NNytxdTJlNStWQ2JBNzM2czZpQXBQY1E1SVYKS2l5VnlRRUNnWUVBMXl3TVJBdEJQNHZmdTdxV252UzVkN2R2TnFHM294Tk83NDFJU0tKRDdnUDZrWXB6UHRJZQpMNkttTHZqc3YxYytINVozTFpDRmE2ZXQvMkdET2pFK1YyZmNrZlY1OVlDQnRtS3pheXNBOWpGU2NYcm9MRVI2CkhpSDlvb2NqMDB3aFZxUG1ZZnZRMXZQS0l4QUxieHpxZjRDU3RqQzBwZ0FEVnllVWJFdjBpZDBDZ1lFQTNCZzcKVHJmUkZDSklzWTB4SlhnbVNuZTRhK3RrR0p3UzVVMktWazM1SEs3TzQxWFZRNlQrWm9CZkVwU2E4WnVHcUZPawpFbm9aQlo5b0YrME9tMEJrYkVJUFlFMXpFNzBpeVQ5NU5tbzZwdVBRMDN6QWpRZTdGWXFZMkJ0TmpCTVVxVmhMCnJadUo4ZkFvMnk5eGE1VS9JbXU5OGp1eUhoaDFNYjRoUzNPM2VFRUNnWUVBbi9pcmxkc1lRM3BtZUZlY3E4a2UKS3BkQ0k4ZlBrM3BEY1c0RWs1dXdEVUVBQlR4OXVmTFZabXp5U0hIZzhkQ1c2ejBlbGMyZ3BBMGlHNEFQNUMvQQpQWk9HTlMzZjRsb01GZUVEcTJWcGJaLzF2MUMxVkZRRXhtcFcrNEtsYSs1cHl0Ukg4QWtibHZQaEVIaFpSOTZqCnFPK2FJOEhLVExBdHk1b3RpdVpkaERFQ2dZQnlneUVJV2Rjc2RKSUIzd1k5Q29CUnFteUhxZGRRZnBQT1BrUEYKbDVnTzlseXFKMVJvZDRYdGFza01iOGtWLytkVjJQNjZwbEF5ZnJlNEN4ellaZTVaN1J6MjdCVDlwaUJkT09zbQpCcXN4ZmNKKzVwK0FRUTl6cThMT1haWkJWUVFnLzlHUUtDYmpmQ0tsdDg5NVBCTzNJdnVXOXJ3N3NGbjVZWVVOCkxzMjhnUUtCZ1FDdDJyU3lURlU2WFRoQlRYTThDVGtBejB4eTdjdjRCbW83WGFYbEcyd2lQNEhhSHJtTGRIWHQKS3RLSThYK2M5WlFxeGF4VDJzdUVXTEt2RGY2c0ROQUVMZUJaQlNqL1ZoOEEzcnh1SXdsS25QOVl5cTNLakNkNwp6Rk5uS1Q4VE1iT0dWODhJWit5aGVZVlYyRWtMQ1BSYi9Kc2ZnZEI2NU15cUtvMHlIYTNPTUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
  - name: linkerd-policy-validator.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-policy-validator
        namespace: linkerd
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQU9iRHJlV25XVGdZZ2lSWEJpY1pPem93RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJek1EY3hOREUwTlRnd05Gb1hEVEkwTURjeE16RTBOVGd3TkZvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdVA0NGhQRE14TFNLYWsxU0E1TlBYcEVhcVdFVjRoS2VFN1ZkNXlsUgo1RTJaRmwrbTU3KzFZSFhTMzl2REo2UVk0enNKRjVLSUZZL3IvOU50OCtRbEVHZHpqb08reXVBZDU3SFBlVUg3CmpsWkRPWE5pVlFRRWxBVmV5UFFsM3hMaklUUHJEaS8ycGJuY2hzSmJINWU0RHl2cnVkSDBHam5iTlQvTzZ2Q2MKcXIrYUpiVXlFaHdTdVJWR0JnU3QzQjFIWkR1dWJmSTllK2JPZVVIT1NyUTdXZEhaM1M2cGNzRWt1bHlFSFNzTgptaXZEZk5nUGVUMi9VR2NNZXovVGZGWGo5NXh5Q0xNR3ozSkY4N0ZWa1pyS2JpMXRzZEl2WUJWekJjT3VVL0FwClVuL1Y4WVdhaVBZOVZLVHZMVlozWVQzdWtNUVl4eXZzQUJMVG1IbVZ2YkdaSFFJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2FNVFBLeFcyQmtvNzE1a05hRHJCYkdvaFUKdXF0Nng4UTJ4cU8rdTFMUjk3SFphaTl0TE1MSk1EZktkYXA2ZjlVcWNiMjVBQlN2bDFuUXl5dElZZUgwSnpTRwpaUWpJUHE3TVNUUjZSaTZtM0V0OTZZNHFibDhQVDRIejBJNTNQb1R1U1FUMEFRQzBSYzgyVUZ5MnkyVGxWbnFjCnZGSzBZSGtRMm93QTc2TnpkSk5QOVRVRnFvUy9RRDRnVU12OGFJb3dUbjlCS2NHSndMVXFSY3BjTW9mZ3UzcDkKQmZ0aElwMVFPNFJTdWY0TGJGcU9mTXpSM2xrK05mOXNTbjRKTVlhaU5SMm1nVHlGVkpBOU1qdlRnWUU4WmVmZwpuSUc3aFgvWnY5Nldiakh5Uk4zWnRDNmlpcy91TFJ6ZnVOTFlBL0dYb0hiNm1WTVg2QnlmSmVuMzA3akQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    failurePolicy: Ignore
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["policy.linkerd.io"]
        apiVersions: ["v1alpha1", "v1beta1"]
        resources:
          - authorizationpolicies
          - httproutes
          - networkauthentications
          - meshtlsauthentications
          - serverauthorizations
          - servers
    sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["list"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: [""]
    resources: ["namespaces", "replicationcontrollers"]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
  - kind: ServiceAccount
    name: linkerd-proxy-injector
    namespace: linkerd
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUthdnNhZVZEdVVoSXBMNGMreU96UGt3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TXpBM01UUXhORFU0TURSYUZ3MHlOREEzTVRNeE5EVTRNRFJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRFN4cC9nZU5jU0lXaG9Ka2c4a0t2QndPaVV1ZVduOU9Mb1lwOTFKbnZjL3RGUQp2UHFCekQ5VVdEaE9WOS9qZFkvVnJ2Mzd3T0wrOGcrSS9mL1ZuYUhGNFhkZWh2TFFRSXc3em02aURsZ1hLYW9KCmREdjBRUXUwdURNYUtqQTMwdGg1dHBzT3I4bFhhTTI5RUdyOXNkZGg4eG5zNlNISmtRVFpkUU9HTGhSSWo4MHUKS09aT1RUMVFYZG1tY2xtQSszUDdwcE9MTmRZUG56TW14T1NLVzMxT2czZkp5MXRveG5OeFgrdUZpQ1N3S0IxQQozTUlvTWh5emEwRkFsbmZQZ3gxMTZ2cXFZVTcxS1FoUUJuS2NzTGtVbWdJSkxTSUhNNGQ3bi80OTVPWjlweE9oCk4vR2J1czZUK1hyd0hnTWJNaFRKOEZuTWl1MG4xUE9xZVlIaTQyNHpBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJic1R2M0MvLy8xT0wrSzJyK0xneHdyU1Zib3l0VTUySlYKdXQ2NTJwdnVVbGxOeHJpKzBaVi8zSmp0QmcxZmVTaGxmNVRLcEZyaHF6SGlBTC9nT1NBdjQ4YzlaUlNJaHBBZgo5b3Q5VlJMUWRVeHVJdjRLMDB4NFF1dWJnTXNlTjhvZVUvdFkrd3JORjhvTGVoWVJzV1FoR0k3OTQ4WGw1eWlJCkx5Uy91VlloMWhtUk9HOFRiOWhBenhzd3hYVnZmTlhrMFVvQkRGNnFrMURPK1pJelRRMXZ5RnZFVFpTV2dtWE0KM21Lc1dEcjhCbTh2dG1wZWUzd0tKbGt3Z25Kcnp5TFQ4ZXJjQmJ5cVZHaTdnRkl2QVdaNVRxL0U0MUpYd045cAppcWRlemZXZElWVnNRd1E0VmNLZUJUT05hRWZTY2pkbTM2WDNWZGFDVTBZaHgyYTVSRG1ICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMHNhZjRIalhFaUZvYUNaSVBKQ3J3Y0RvbExubHAvVGk2R0tmZFNaNzNQN1JVTHo2Cmdjdy9WRmc0VGxmZjQzV1AxYTc5KzhEaS92SVBpUDMvMVoyaHhlRjNYb2J5MEVDTU84NXVvZzVZRnltcUNYUTcKOUVFTHRMZ3pHaW93TjlMWWViYWJEcS9KVjJqTnZSQnEvYkhYWWZNWjdPa2h5WkVFMlhVRGhpNFVTSS9OTGlqbQpUazA5VUYzWnBuSlpnUHR6KzZhVGl6WFdENTh6SnNUa2lsdDlUb04zeWN0YmFNWnpjVi9yaFlna3NDZ2RRTnpDCktESWNzMnRCUUpaM3o0TWRkZXI2cW1GTzlTa0lVQVp5bkxDNUZKb0NDUzBpQnpPSGU1LytQZVRtZmFjVG9UZngKbTdyT2svbDY4QjRER3pJVXlmQlp6SXJ0SjlUenFubUI0dU51TXdJREFRQUJBb0lCQVFDSHNTVlY3cFdPNzREMgpvOGFYYncrVDhhd0pxMC9FKyt0a2JiRjRTdWtzMGNOUk5nZ1RyYmtMaEt2akM4RnYvc3cxWmEzTytGTnFpODBpCmhWckJXL1M4bnJVcFhybE5CbkVCUTVtSHJMSmJYeEEvZTl2cEdFTC8raUd6ODNzTlJTamwyb0FpU1ZyV2Nmc1oKZjB0UnZiOEtLT1lFMWVWUmpaSFFxUHMyMDgxdEZESkhSNHlvRW1pWUNzeVNtampiWUlLSUdHTVBhMW13em5BbwpZQituSk1QYUMxbXVNSXBqZ0oycXVMUTlSZTUzME45ZHovR0NPeTQ1QWpSdWJ3VEhERTZyMFd2aVRndVVFdXB0Ci9vSnlJditFMjJtUUNiM2RmTHVhQk5RUGxnMUlueXlCM0psQ0xjRmY3OXZmZHNLWWpPV28rU0xVK3BzL24zQWMKcjEyNUZUM0pBb0dCQU5QUVAxQ3NDazlvNTBGVVc5LzNPUUlqTkR5M1RVaWg1T240aFMyS0tNUklYeDYvSENYYwpOaldkOSt4Qk92Z0Y3QW1wNk5saWIxay96bW10eXZLR1hDWDFuRjYwTDkwMDVoM1BDd2ZvR28wck9xN3JDUEY1CjlBNzFpcHpDS3h3eXpLVFBnR2NjVmM1cWJHQTFhQ0ZkKzYwTnN4S0hOZGprbnVxRGRuYW8wY0wxQW9HQkFQNisKOXlpQTQ1V1pWd2NDb0kycExvRUN6SjVrQjlyU0N4T25MT01EaTRFcW1lcUtZNGV1TWtWWGNTZElkbndNckpCQQpWMkZhanoySUR0dEZVNTlwb2IzQk1hTlY1Z1l6aUJEZ1RKR2pOK056NG8yYmF3M2tXR2lFMFo5M3hOb3hEUVNmCmdhMkQ3dHc0TGNuM2p4MkE1emllN3hMZXRTV1VCWmx2SmJBSWtjT0hBb0dBTWV2RTRHaUx6WWQxNlluT1ZZelkKM000YlE2d1lCT1JUSldtelNiWmtRVTZsVElQU1NJSU1MTHJjY2N3MTc3ckZsTWw4M2E4N2V4ZDB1S2VEUzRHcgpPaThXK2FNU0hOcVkyYkd3Y2Q2Y1UyVTY0WHIza3FJaGlWMEpuRVNQRUloUWZ3K0F2Y3lKMUtwMGZJQloySE5rCkc3YzgyME1PeDkycUxxOXBQakl2cmZrQ2dZQXdLaDBDN0hPYktsWFkvbmNxc1kwWVdWWWtzRmNIMldTOHY0UHUKSEJKNVJudTVhNWJyNVZTZDVhMkFOdVFvQ2lGcVdLL3N1VG1SOGJLVlpLTXQ1Y1B0NDZRbDlLeThDV3cxZktNZAplaFdzREpJT0lnOTRuZTdWUEIrQ0hodjdBUUVzR1poa0hTakJQR0h6NkxtSFk0TFVJc0NpK2JhWU4wZGp2aThLCi9HUEs2d0tCZ1FDditJVVRON3puNXplc3RFS0ROMXFvVTZWTzAzN1FWL0FxTFBsTGV0aU9yTEg4YzR6V3l1OWQKQWRkOHQ3aldsYXRSYW1qRlhaaFBRVDljKzlSYno4bGFIQzlWeXJtTDh4YTgvZE1tUCtRVmNDdWcvMVBoeXNVQwptdG1xSEU5S05weFlGdVRla0V2ZkQxZ0pYUFNwUkFlWSsyclhlWURJMGh0UGpoSUNkVmxHRWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
  - name: linkerd-proxy-injector.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - kube-system
            - cert-manager
    objectSelector: null
    clientConfig:
      service:
        name: linkerd-proxy-injector
        namespace: linkerd
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUthdnNhZVZEdVVoSXBMNGMreU96UGt3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TXpBM01UUXhORFU0TURSYUZ3MHlOREEzTVRNeE5EVTRNRFJhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRFN4cC9nZU5jU0lXaG9Ka2c4a0t2QndPaVV1ZVduOU9Mb1lwOTFKbnZjL3RGUQp2UHFCekQ5VVdEaE9WOS9qZFkvVnJ2Mzd3T0wrOGcrSS9mL1ZuYUhGNFhkZWh2TFFRSXc3em02aURsZ1hLYW9KCmREdjBRUXUwdURNYUtqQTMwdGg1dHBzT3I4bFhhTTI5RUdyOXNkZGg4eG5zNlNISmtRVFpkUU9HTGhSSWo4MHUKS09aT1RUMVFYZG1tY2xtQSszUDdwcE9MTmRZUG56TW14T1NLVzMxT2czZkp5MXRveG5OeFgrdUZpQ1N3S0IxQQozTUlvTWh5emEwRkFsbmZQZ3gxMTZ2cXFZVTcxS1FoUUJuS2NzTGtVbWdJSkxTSUhNNGQ3bi80OTVPWjlweE9oCk4vR2J1czZUK1hyd0hnTWJNaFRKOEZuTWl1MG4xUE9xZVlIaTQyNHpBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJic1R2M0MvLy8xT0wrSzJyK0xneHdyU1Zib3l0VTUySlYKdXQ2NTJwdnVVbGxOeHJpKzBaVi8zSmp0QmcxZmVTaGxmNVRLcEZyaHF6SGlBTC9nT1NBdjQ4YzlaUlNJaHBBZgo5b3Q5VlJMUWRVeHVJdjRLMDB4NFF1dWJnTXNlTjhvZVUvdFkrd3JORjhvTGVoWVJzV1FoR0k3OTQ4WGw1eWlJCkx5Uy91VlloMWhtUk9HOFRiOWhBenhzd3hYVnZmTlhrMFVvQkRGNnFrMURPK1pJelRRMXZ5RnZFVFpTV2dtWE0KM21Lc1dEcjhCbTh2dG1wZWUzd0tKbGt3Z25Kcnp5TFQ4ZXJjQmJ5cVZHaTdnRkl2QVdaNVRxL0U0MUpYd045cAppcWRlemZXZElWVnNRd1E0VmNLZUJUT05hRWZTY2pkbTM2WDNWZGFDVTBZaHgyYTVSRG1ICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
    failurePolicy: Ignore
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - operations: ["CREATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods", "services"]
    sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.13.5
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.13.5
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMzA3MTQxNDU3NTRaFw0yNDA3MTMxNDU4MTRaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEdGMXQQ2Yi9fa2AXqt0Z8iiE+4W75UJ8Jtbz+Ux/WdVXKf69BD4Umy1Of/c3Y
            HrD4pE3PleVc6718wY/DgbGO8qNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBR5/y7LX9cGevhMUI2mI9G9KZePjjAKBggqhkjOPQQDAgNIADBFAiBpwUZrPXUd
            LvSa2Eb14jSTyzBxH4n2LVlC/5v+kfB3cwIhAJCYLS7CIALqRUIvh+j4/VXhAIPx
            ox73tsMlK6ss8Wma
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMzA3MTQxNDU3NTRaFw0yNDA3MTMxNDU4MTRaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEdGMXQQ2Yi9fa2AXqt0Z8iiE+4W75UJ8Jtbz+Ux/WdVXKf69BD4Umy1Of/c3Y
      HrD4pE3PleVc6718wY/DgbGO8qNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBR5/y7LX9cGevhMUI2mI9G9KZePjjAKBggqhkjOPQQDAgNIADBFAiBpwUZrPXUd
      LvSa2Eb14jSTyzBxH4n2LVlC/5v+kfB3cwIhAJCYLS7CIALqRUIvh+j4/VXhAIPx
      ox73tsMlK6ss8Wma
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.13.5
    networkValidator:
      connectAddr: 1.1.1.1:20001
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.2.1
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEzTVRReE5EVTNOVFJhRncweU5EQTNNVE14TkRVNE1UUmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVkR01YUVEyWWk5ZmEyQVhxdDBaOGlpRSs0Vzc1VUo4SnRieitVeC9XZFZYS2Y2OUJENFVteTFPZi9jM1kKSHJENHBFM1BsZVZjNjcxOHdZL0RnYkdPOHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCUjUveTdMWDljR2V2aE1VSTJtSTlHOUtaZVBqakFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUJwd1VaclBYVWQKTHZTYTJFYjE0alNUeXpCeEg0bjJMVmxDLzV2K2tmQjNjd0loQUpDWUxTN0NJQUxxUlVJdmgrajQvVlhoQUlQeApveDczdHNNbEs2c3M4V21hCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVA5TGpJTGQ0eDhVWHhXTnFIMVRjUCtYbDJ3dGRJWDZuVlQ1N1RpdU1rcjBvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFZEdNWFFRMllpOWZhMkFYcXQwWjhpaUUrNFc3NVVKOEp0YnorVXgvV2RWWEtmNjlCRDRVbQp5MU9mL2MzWUhyRDRwRTNQbGVWYzY3MTh3WS9EZ2JHTzhnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMzA3MTQxNDU3NTRaFw0yNDA3MTMxNDU4MTRaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEdGMXQQ2Yi9fa2AXqt0Z8iiE+4W75UJ8Jtbz+Ux/WdVXKf69BD4Umy1Of/c3Y
    HrD4pE3PleVc6718wY/DgbGO8qNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBR5/y7LX9cGevhMUI2mI9G9KZePjjAKBggqhkjOPQQDAgNIADBFAiBpwUZrPXUd
    LvSa2Eb14jSTyzBxH4n2LVlC/5v+kfB3cwIhAJCYLS7CIALqRUIvh+j4/VXhAIPx
    ox73tsMlK6ss8Wma
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.5
        linkerd.io/proxy-version: stable-2.13.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 17567e4535a9b985db59672e3c97601bc40582c27f0cc7b70fcab42dccd40179
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux

      containers:
        - args:
            - identity
            - -log-level=info
            - -log-format=plain
            - -controller-namespace=linkerd
            - -identity-trust-domain=cluster.local
            - -identity-issuance-lifetime=24h0m0s
            - -identity-clock-skew-allowance=20s
            - -identity-scheme=linkerd.io/tls
            - -enable-pprof=false
          env:
            - name: LINKERD_DISABLED
              value: "linkerd-await cannot block the identity controller"
          image: cr.l5d.io/linkerd/controller:stable-2.13.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9990
            initialDelaySeconds: 10
          name: identity
          ports:
            - containerPort: 8080
              name: grpc
            - containerPort: 9990
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9990
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 2103
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/issuer
              name: identity-issuer
            - mountPath: /var/run/linkerd/identity/trust-roots/
              name: trust-roots
        - env:
            - name: _pod_name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
              value: "8080"
            - name: LINKERD2_PROXY_LOG
              value: "warn,linkerd=info,trust_dns=error"
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: "plain"
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
            - name: LINKERD2_PROXY_POLICY_SVC_ADDR
              value: linkerd-policy.linkerd.svc.cluster.local.:8090
            - name: LINKERD2_PROXY_POLICY_WORKLOAD
              value: "$(_pod_ns):$(_pod_name)"
            - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
              value: all-unauthenticated
            - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: "100ms"
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: "1000ms"
            - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "5s"
            - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "90s"
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_INBOUND_IPS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIPs
            - name: LINKERD2_PROXY_INBOUND_PORTS
              value: "8080,9990"
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
              value: "25,587,3306,4444,5432,6379,9300,11211"
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              valueFrom:
                configMapKeyRef:
                  name: linkerd-identity-trust-roots
                  key: ca-bundle.crt
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/tokens/linkerd-identity-token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: localhost.:8080
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_POLICY_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
          image: cr.l5d.io/linkerd/proxy:stable-2.13.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2102
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
            - mountPath: /var/run/secrets/tokens
              name: linkerd-identity-token
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - "4190,4191,4567,4568"
            - --outbound-ports-to-ignore
            - "443,6443"
          image: cr.l5d.io/linkerd/proxy-init:v2.2.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "20Mi"
            requests:
              cpu: "100m"
              memory: "20Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            runAsNonRoot: true
            runAsUser: 65534
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /run
              name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
        - name: identity-issuer
          secret:
            secretName: linkerd-identity-issuer
        - configMap:
            name: linkerd-identity-trust-roots
          name: trust-roots
        - emptyDir: {}
          name: linkerd-proxy-init-xtables-lock
        - name: linkerd-identity-token
          projected:
            sources:
              - serviceAccountToken:
                  path: linkerd-identity-token
                  expirationSeconds: 86400
                  audience: identity.l5d.io
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: grpc
      port: 8086
      targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: grpc
      port: 8086
      targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: sp-validator
      port: 443
      targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: grpc
      port: 8090
      targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: policy-https
      port: 443
      targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.5
        linkerd.io/proxy-version: stable-2.13.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 17567e4535a9b985db59672e3c97601bc40582c27f0cc7b70fcab42dccd40179
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux

      containers:
        - env:
            - name: _pod_name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LINKERD2_PROXY_LOG
              value: "warn,linkerd=info,trust_dns=error"
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: "plain"
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: localhost.:8086
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
            - name: LINKERD2_PROXY_POLICY_SVC_ADDR
              value: localhost.:8090
            - name: LINKERD2_PROXY_POLICY_WORKLOAD
              value: "$(_pod_ns):$(_pod_name)"
            - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
              value: all-unauthenticated
            - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: "100ms"
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: "1000ms"
            - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "5s"
            - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "90s"
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_INBOUND_IPS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIPs
            - name: LINKERD2_PROXY_INBOUND_PORTS
              value: "8086,8090,8443,9443,9990,9996,9997"
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
              value: "25,587,3306,4444,5432,6379,9300,11211"
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              valueFrom:
                configMapKeyRef:
                  name: linkerd-identity-trust-roots
                  key: ca-bundle.crt
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/tokens/linkerd-identity-token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_POLICY_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
          image: cr.l5d.io/linkerd/proxy:stable-2.13.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2102
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          lifecycle:
            postStart:
              exec:
                command:
                  - /usr/lib/linkerd/linkerd-await
                  - --timeout=2m
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
            - mountPath: /var/run/secrets/tokens
              name: linkerd-identity-token
        - args:
            - destination
            - -addr=:8086
            - -controller-namespace=linkerd
            - -enable-h2-upgrade=true
            - -log-level=info
            - -log-format=plain
            - -enable-endpoint-slices=true
            - -cluster-domain=cluster.local
            - -identity-trust-domain=cluster.local
            - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
            - -enable-pprof=false
          image: cr.l5d.io/linkerd/controller:stable-2.13.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9996
            initialDelaySeconds: 10
          name: destination
          ports:
            - containerPort: 8086
              name: grpc
            - containerPort: 9996
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9996
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 2103
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
        - args:
            - sp-validator
            - -log-level=info
            - -log-format=plain
            - -enable-pprof=false
          image: cr.l5d.io/linkerd/controller:stable-2.13.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9997
            initialDelaySeconds: 10
          name: sp-validator
          ports:
            - containerPort: 8443
              name: sp-validator
            - containerPort: 9997
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9997
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 2103
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: sp-tls
              readOnly: true
        - args:
            - --admin-addr=0.0.0.0:9990
            - --control-plane-namespace=linkerd
            - --grpc-addr=0.0.0.0:8090
            - --server-addr=0.0.0.0:9443
            - --server-tls-key=/var/run/linkerd/tls/tls.key
            - --server-tls-certs=/var/run/linkerd/tls/tls.crt
            - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
            - --identity-domain=cluster.local
            - --cluster-domain=cluster.local
            - --default-policy=all-unauthenticated
            - --log-level=info
            - --log-format=plain
            - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
            - --probe-networks=0.0.0.0/0
          image: cr.l5d.io/linkerd/policy-controller:stable-2.13.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: admin-http
          name: policy
          ports:
            - containerPort: 8090
              name: grpc
            - containerPort: 9990
              name: admin-http
            - containerPort: 9443
              name: policy-https
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: admin-http
            initialDelaySeconds: 10
          resources:
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 2103
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: policy-tls
              readOnly: true
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - "4190,4191,4567,4568"
            - --outbound-ports-to-ignore
            - "443,6443"
          image: cr.l5d.io/linkerd/proxy-init:v2.2.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "20Mi"
            requests:
              cpu: "100m"
              memory: "20Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            runAsNonRoot: true
            runAsUser: 65534
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /run
              name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
        - name: sp-tls
          secret:
            secretName: linkerd-sp-validator-k8s-tls
        - name: policy-tls
          secret:
            secretName: linkerd-policy-validator-k8s-tls
        - emptyDir: {}
          name: linkerd-proxy-init-xtables-lock
        - name: linkerd-identity-token
          projected:
            sources:
              - serviceAccountToken:
                  path: linkerd-identity-token
                  expirationSeconds: 86400
                  audience: identity.l5d.io
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
spec:
  concurrencyPolicy: Replace
  schedule: "08 15 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.13.5
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
            - name: heartbeat
              image: cr.l5d.io/linkerd/controller:stable-2.13.5
              imagePullPolicy: IfNotPresent
              env:
                - name: LINKERD_DISABLED
                  value: "the heartbeat controller does not use the proxy"
              args:
                - "heartbeat"
                - "-controller-namespace=linkerd"
                - "-log-level=info"
                - "-log-format=plain"
                - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsNonRoot: true
                runAsUser: 2103
                allowPrivilegeEscalation: false
                seccompProfile:
                  type: RuntimeDefault
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.5
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.5
        linkerd.io/proxy-version: stable-2.13.5
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 17567e4535a9b985db59672e3c97601bc40582c27f0cc7b70fcab42dccd40179
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux

      containers:
        - env:
            - name: _pod_name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LINKERD2_PROXY_LOG
              value: "warn,linkerd=info,trust_dns=error"
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: "plain"
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
            - name: LINKERD2_PROXY_POLICY_SVC_ADDR
              value: linkerd-policy.linkerd.svc.cluster.local.:8090
            - name: LINKERD2_PROXY_POLICY_WORKLOAD
              value: "$(_pod_ns):$(_pod_name)"
            - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
              value: all-unauthenticated
            - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: "100ms"
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: "1000ms"
            - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "5s"
            - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
              value: "90s"
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_INBOUND_IPS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIPs
            - name: LINKERD2_PROXY_INBOUND_PORTS
              value: "8443,9995"
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
              value: "25,587,3306,4444,5432,6379,9300,11211"
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              valueFrom:
                configMapKeyRef:
                  name: linkerd-identity-trust-roots
                  key: ca-bundle.crt
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/tokens/linkerd-identity-token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
            - name: LINKERD2_PROXY_POLICY_SVC_NAME
              value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
          image: cr.l5d.io/linkerd/proxy:stable-2.13.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2102
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          lifecycle:
            postStart:
              exec:
                command:
                  - /usr/lib/linkerd/linkerd-await
                  - --timeout=2m
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
            - mountPath: /var/run/secrets/tokens
              name: linkerd-identity-token
        - args:
            - proxy-injector
            - -log-level=info
            - -log-format=plain
            - -linkerd-namespace=linkerd
            - -enable-pprof=false
          image: cr.l5d.io/linkerd/controller:stable-2.13.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9995
            initialDelaySeconds: 10
          name: proxy-injector
          ports:
            - containerPort: 8443
              name: proxy-injector
            - containerPort: 9995
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9995
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 2103
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
            - mountPath: /var/run/linkerd/identity/trust-roots
              name: trust-roots
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - "4190,4191,4567,4568"
            - --outbound-ports-to-ignore
            - "443,6443"
          image: cr.l5d.io/linkerd/proxy-init:v2.2.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "20Mi"
            requests:
              cpu: "100m"
              memory: "20Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            runAsNonRoot: true
            runAsUser: 65534
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /run
              name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - configMap:
            name: linkerd-identity-trust-roots
          name: trust-roots
        - name: tls
          secret:
            secretName: linkerd-proxy-injector-k8s-tls
        - emptyDir: {}
          name: linkerd-proxy-init-xtables-lock
        - name: linkerd-identity-token
          projected:
            sources:
              - serviceAccountToken:
                  path: linkerd-identity-token
                  expirationSeconds: 86400
                  audience: identity.l5d.io
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.5
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
    - name: proxy-injector
      port: 443
      targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEzTVRReE5EVTNOVFJhRncweU5EQTNNVE14TkRVNE1UUmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFZEdNWFFRMllpOWZhMkFYcXQwWjhpaUUrNFc3NVVKOEp0YnorVXgvV2RWWEtmNjlCRDRVbXkxT2YvYzNZCiAgICAgICAgSHJENHBFM1BsZVZjNjcxOHdZL0RnYkdPOHFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlI1L3k3TFg5Y0dldmhNVUkybUk5RzlLWmVQampBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlCcHdVWnJQWFVkCiAgICAgICAgTHZTYTJFYjE0alNUeXpCeEg0bjJMVmxDLzV2K2tmQjNjd0loQUpDWUxTN0NJQUxxUlVJdmgrajQvVlhoQUlQeAogICAgICAgIG94NzN0c01sSzZzczhXbWEKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSVA5TGpJTGQ0eDhVWHhXTnFIMVRjUCtYbDJ3dGRJWDZuVlQ1N1RpdU1rcjBvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVkR01YUVEyWWk5ZmEyQVhxdDBaOGlpRSs0Vzc1VUo4SnRieitVeC9XZFZYS2Y2OUJENFVtCiAgICAgICAgeTFPZi9jM1lIckQ0cEUzUGxlVmM2NzE4d1kvRGdiR084Zz09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU16QTNNVFF4TkRVM05UUmFGdzB5TkRBM01UTXhORFU0TVRSYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVkR01YUVEyWWk5ZmEyQVhxdDBaOGlpRSs0Vzc1VUo4SnRieitVeC9XZFZYS2Y2OUJENFVteTFPZi9jM1kKICBIckQ0cEUzUGxlVmM2NzE4d1kvRGdiR084cU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCUjUveTdMWDljR2V2aE1VSTJtSTlHOUtaZVBqakFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUJwd1VaclBYVWQKICBMdlNhMkViMTRqU1R5ekJ4SDRuMkxWbEMvNXYra2ZCM2N3SWhBSkNZTFM3Q0lBTHFSVUl2aCtqNC9WWGhBSVB4CiAgb3g3M3RzTWxLNnNzOFdtYQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
